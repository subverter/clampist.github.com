<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[lmst]]></title>
  <link href="http://lmst.me/atom.xml" rel="self"/>
  <link href="http://lmst.me/"/>
  <updated>2012-10-13T21:10:59+08:00</updated>
  <id>http://lmst.me/</id>
  <author>
    <name><![CDATA[clampist]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenCV Basis]]></title>
    <link href="http://lmst.me/blog/2012/10/opencv-basis.html"/>
    <updated>2012-10-13T18:30:00+08:00</updated>
    <id>http://lmst.me/blog/2012/10/opencv-basis</id>
    <content type="html"><![CDATA[<p>1.Load an image</p>

<pre><code>In [1]: import cv

In [2]: im1 = cv.LoadImageM('foo.jpg')

In [3]: print type(im1)
&lt;type 'cv2.cv.cvmat'&gt;

In [4]: im2 = cv.LoadImage('foo.jpg')

In [5]: print type(im2)
&lt;type 'cv2.cv.iplimage'&gt;

In [6]: cv.SaveImage('foo1.png', im1)

In [7]: cv.SaveImage('foo2.png', im2)
</code></pre>

<p>可以看到<code>LoadImageM</code>得到的是一个<code>cvmat</code>图像，而<code>LoadImage</code>得到的是一个<code>iplimage</code>图像，两者均可以输出为图像</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install OpenEXR for Python]]></title>
    <link href="http://lmst.me/blog/2012/10/install-openexr-for-python.html"/>
    <updated>2012-10-11T12:50:00+08:00</updated>
    <id>http://lmst.me/blog/2012/10/install-openexr-for-python</id>
    <content type="html"><![CDATA[<p>Using OpenEXR’s Python bindings we can make a simple image viewer.<br/>
So, we should install OpenEXR first, following <a href="http://www.excamera.com/sphinx/articles-openexr.html">OpenEXR bindings for Python</a><br/>
Make sure you have already installed OpenEXR&#8217;s Prerequisite: Python 2.5+ and the OpenEXR C++ library(openexr).</p>

<pre><code>wget http://excamera.com/files/OpenEXR-1.2.0.tar.gz

tar zxvf OpenEXR-1.2.0.tar.gz

cd OpenEXR-1.2.0

(sudo python2 setup.py build)

sudo python2 setup.py install
</code></pre>

<p>Then, you can follow <a href="http://opencv.willowgarage.com/documentation/python/cookbook.html#opencv-and-openexr">OpenCV and OpenEXR</a></p>

<p>References: <a href="http://blog.csdn.net/ponder008/article/details/6592719">Python how to install setup.py</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wonderful Octopress]]></title>
    <link href="http://lmst.me/blog/2012/10/wonderful-octopress.html"/>
    <updated>2012-10-09T14:37:00+08:00</updated>
    <id>http://lmst.me/blog/2012/10/wonderful-octopress</id>
    <content type="html"><![CDATA[<p>Today, I install Octopress, it is wonderful.<br/>
I follow the official docs
<a href="http://octopress.org/docs/setup/">setup</a>
<a href="http://octopress.org/docs/deploying/github/">deploy</a>
<a href="http://octopress.org/docs/configuring/">config</a>
<a href="http://octopress.org/docs/blogging/">blogging</a><br/>
and the other two blogs:
<a href="http://jokry.com/blog/2012/03/08/octopress/">jokry.com</a>
<a href="http://blog.javachen.com/2012/06/migrate-blog-form-wordpress-to-github-with-octopress/">blog.javachen.com</a></p>

<p>The following command is in common use(in the project root directory):</p>

<pre><code>rake new_post["title"]
rake new_page[super-awesome]
rake new_page[super-awesome/page.html]

rake preview
rake generate
rake deploy

git add .
git commit -m 'your message'
git push origin source
</code></pre>

<p>Add a about page</p>

<pre><code>rake new_page[about]
</code></pre>

<p>Then I modify main navigation, edit
<code>source/_includes/custom/navigation.html</code></p>

<pre><code>&lt;ul class="main-navigation"&gt;
&lt;li&gt;&lt;a href="http://lmst.me/"&gt;Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lmst.me/blog/archives"&gt;Archives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lmst.me/about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>Also see <a href="http://octopress.org/docs/theme/template/">theme/template</a></p>
]]></content>
  </entry>
  
</feed>
